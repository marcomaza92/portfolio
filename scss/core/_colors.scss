// File: Colors
// Author: Marco Maza
// Version: 1.0.0
// License: MIT

// Variables
$step: 0;
$shades: ();
$tints: ();
$color-elements: 'background', 'color', 'border-color';
$color-types: 'base', 'shade', 'tint';
// Mixins
@mixin createColorClasses($element, $type, $name, $value) {
  .#{$element}.#{$type}.#{$name} {
    #{$element}: $value;
  }
}
// Check if you pay attention to the previous conditions
@if $gap * $count >= 0 and $gap * $count <= 100 {
  $gap: $gap;
  $count: $count;
} @else {
  @error 'Out of range: $gap * $count must be an integer between 0 and 100';
}
// Functions
@function createShadesAndTints($name, $value) {
  $shade: ();
  $tint: ();
  @for $i from 1 through $count {
    $step: $step + $gap;
    $temp-shade: (
      #{$name}-shade-#{$i}: darken($value, ($gap * ($count + 1)) - $step)
    );
    $shade: map-merge($shade, $temp-shade);
    $temp-tint: (
      #{$name}-tint-#{$i}: lighten($value, $step)
    );
    $tint: map-merge($tint, $temp-tint);
  }
  @return $shade, $tint;
}
// Instructions
@each $color-name, $color-value in $colors {
  $color-temp-shade: ();
  $color-temp-tint: ();
  $color-result: createShadesAndTints($color-name, $color-value);
  $color-shade: nth($color-result, 1);
  $color-tint: nth($color-result, 2);
  $color-temp-shade: (
    #{$color-name}-shades: $color-shade
  );
  $color-temp-tint: (
    #{$color-name}-tints: $color-tint
  );
  $shades: map-merge($shades, $color-temp-shade);
  $tints: map-merge($tints, $color-temp-tint);
}
@each $color-element in $color-elements {
  @each $color-type in $color-types {
    @if $color-type == 'base' {
      @each $color-name, $color-value in $colors {
        @include createColorClasses($color-element, $color-type, $color-name, $color-value);
      }
    }
    @if $color-type == 'shade' {
      @each $color-shade, $color-sub-shade in $shades {
        @each $color-shade-name, $color-shade-value in $color-sub-shade {
          @include createColorClasses($color-element, $color-type, $color-shade-name, $color-shade-value);
        }
      }
    }
    @if $color-type == 'tint' {
      @each $color-tint, $color-sub-tint in $tints {
        @each $color-tint-name, $color-tint-value in $color-sub-tint {
          @include createColorClasses($color-element, $color-type, $color-tint-name, $color-tint-value);
        }
      }
    }
  }
}
